package com.xworkz.runner;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Function;
import java.util.stream.Collectors;

public class CountriesRunner {
    public static void main(String[] args) {
        Collection<String> collection = new ArrayList<>();
        collection.add("San Marino");
        collection.add("South Africa");
        collection.add("Mongolia");
        collection.add("Germany");
        collection.add("El Salvador");
        collection.add("Liberia");
        collection.add("Saint Kitts and Nevis");
        collection.add("Cameroon");
        collection.add("Zambia");
        collection.add("Oman");
        collection.add("Switzerland");
        collection.add("Kuwait");
        collection.add("Chad");
        collection.add("Paraguay");
        collection.add("Micronesia, Federated States of");
        collection.add("Rwanda");
        collection.add("Uruguay");
        collection.add("Thailand");
        collection.add("Cuba");
        collection.add("Cyprus");
        collection.add("Jamaica");
        collection.add("Spain");
        collection.add("Norfolk Island");
        collection.add("Yemen");
        collection.add("Christmas Island");
        collection.add("French Guiana");
        collection.add("British Indian Ocean Territory");
        collection.add("Honduras");
        collection.add("Costa Rica");
        collection.add("Seychelles");
        collection.add("Ireland");
        collection.add("Bhutan");
        collection.add("Palestine, State of");
        collection.add("Fiji");
        collection.add("Malawi");
        collection.add("Guinea");
        collection.add("Estonia");
        collection.add("Andorra");
        collection.add("Sri Lanka");
        collection.add("Saudi Arabia");
        collection.add("Togo");
        collection.add("Papua New Guinea");
        collection.add("Gabon");
        collection.add("Philippines");
        collection.add("Montenegro");
        collection.add("Greece");
        collection.add("Bulgaria");
        collection.add("French Polynesia");
        collection.add("Tajikistan");
        collection.add("Liechtenstein");
        collection.add("Pakistan");
        collection.add("United States");
        collection.add("Colombia");
        collection.add("Luxembourg");
        collection.add("Canada");
        collection.add("Japan");
        collection.add("Senegal");
        collection.add("Slovenia");
        collection.add("Namibia");
        collection.add("Slovakia");
        collection.add("Antigua and Barbuda");
        collection.add("Armenia");
        collection.add("Norway");
        collection.add("Burundi");
        collection.add("Gambia");
        collection.add("Martinique");
        collection.add("Mozambique");
        collection.add("Guam");
        collection.add("Hungary");
        collection.add("Guadeloupe");
        collection.add("Samoa");
        collection.add("Ethiopia");
        collection.add("Tunisia");
        collection.add("Gibraltar");
        collection.add("Turkey");
        collection.add("Mali");
        collection.add("Eritrea");
        collection.add("Singapore");
        collection.add("Holy See");
        collection.add("Uzbekistan");
        collection.add("India");
        collection.add("Malta");
        collection.add("Mexico");
        collection.add("Brazil");
        collection.add("Kazakhstan");
        collection.add("Indonesia");
        collection.add("Botswana");
        collection.add("Mauritius");
        collection.add("Monaco");
        collection.add("Djibouti");
        collection.add("Afghanistan");
        collection.add("Anguilla");
        collection.add("Nigeria");
        collection.add("Malaysia");
        collection.add("Isle of Man");
        collection.add("Georgia");
        collection.add("Belgium");
        collection.add("Turkmenistan");
        collection.add("New Zealand");
        collection.add("Peru");
        collection.add("South Georgia and the South Sandwich Islands");
        collection.add("Iceland");
        collection.add("Poland");
        collection.add("Nicaragua");
        collection.add("Ukraine");
        collection.add("Algeria");
        collection.add("Guinea-Bissau");
        collection.add("Lebanon");
        collection.add("Kenya");
        collection.add("Somalia");
        collection.add("Zimbabwe");
        collection.add("Viet Nam");
        collection.add("Iran, Islamic Republic of");
        collection.add("Marshall Islands");
        collection.add("Saint Lucia");
        collection.add("Syrian Arab Republic");
        collection.add("Netherlands");
        collection.add("Comoros");
        collection.add("Maldives");
        collection.add("Timor-Leste");
        collection.add("Bonaire, Sint Eustatius and Saba");
        collection.add("Palau");
        collection.add("Romania");
        collection.add("Azerbaijan");
        collection.add("Panama");
        collection.add("Mauritania");
        collection.add("Svalbard and Jan Mayen");
        collection.add("Hong Kong");
        collection.add("Serbia");
        collection.add("Croatia");
        collection.add("United Kingdom");
        collection.add("Bolivia, Plurinational State of");
        collection.add("North Macedonia");
        collection.add("American Samoa");
        collection.add("Vietnam");
        collection.add("China");
        collection.add("Kyrgyzstan");
        collection.add("Tanzania, United Republic of");
        collection.add("Puerto Rico");
        collection.add("Saint Vincent and the Grenadines");
        collection.add("Bahrain");
        collection.add("Jordan");
        collection.add("Albania");
        collection.add("Burkina Faso");
        collection.add("Qatar");
        collection.add("Italy");
        collection.add("Niger");
        collection.add("Austria");
        collection.add("Czechia");
        collection.add("Cook Islands");
        collection.add("Greenland");
        collection.add("South Sudan");
        collection.add("Reunion");
        collection.add("Benin");
        collection.add("Aruba");
        collection.add("Cabo Verde");
        collection.add("Angola");
        collection.add("Bangladesh");
        collection.add("Barbados");
        collection.add("Madagascar");
        collection.add("Tonga");
        collection.add("Laos");
        collection.add("Belize");
        collection.add("Cayman Islands");
        collection.add("Western Sahara");
        collection.add("Australia");
        collection.add("Israel");
        collection.add("Bahamas");
        collection.add("Saint Barthélemy");
        collection.add("Russian Federation");
        collection.add("Taiwan, Province of China");
        collection.add("Cameroon");
        collection.add("New Caledonia");
        collection.add("Morocco");
        collection.add("Mayotte");
        collection.add("Central African Republic");
        collection.add("Korea, Republic of");
        collection.add("Equatorial Guinea");
        collection.add("Dominica");
        collection.add("Egypt");
        collection.add("France");
        collection.add("Iraq");
        collection.add("Belarus");
        collection.add("Haiti");
        collection.add("Vanuatu");
        collection.add("Suriname");
        collection.add("Lithuania");
        collection.add("Democratic Republic of the Congo");
        collection.add("Chile");
        collection.add("Korea, Democratic People's Republic of");
        collection.add("Latvia");
        collection.add("Saint Pierre and Miquelon");
        collection.add("Curaçao");
        collection.add("Guernsey");
        collection.add("Nauru");
        collection.add("Solomon Islands");
        collection.add("Tokelau");
        collection.add("Macao");
        collection.add("Denmark");
        collection.add("Finland");
        collection.add("Sweden");
        collection.add("Montserrat");
        collection.add("Pitcairn");
        collection.add("Tunis");
        collection.add("Bouvet Island");
        collection.add("Heard Island and McDonald Islands");
        collection.add("mee");


//
//        for(String count:collection){
//            System.out.println(count);
//        }
//        System.out.println("=======================================");
        collection.forEach(System.out::println);
        System.out.println("=======================================");
        collection.stream().filter((e) -> e.toLowerCase().startsWith("i")).forEach(i -> System.out.println(i));
        System.out.println("=======================================");
        collection.stream().filter((e) -> e.toLowerCase().startsWith("g")).forEach(g -> System.out.println(g));
        System.out.println("=======================================");
        collection.stream().filter((e) -> e.toLowerCase().endsWith("a")).forEach(a -> System.out.println(a));
        System.out.println("=======================================");
        collection.stream().sorted().forEach(a -> System.out.println(a));
        System.out.println("=======================================");
        collection.stream().sorted(Comparator.reverseOrder()).forEach(r -> System.out.println(r));
        System.out.println("=======================================");
        collection.stream().filter((e) -> e.length() > 6).forEach(s -> System.out.println(s));
        System.out.println("=======================================");
        collection.stream().filter((e) -> e.length() < 4).forEach(f -> System.out.println(f));
        System.out.println("=======================================");
        collection.stream().filter((e) -> e.toLowerCase().contains("o")).forEach(o -> System.out.println(o));
        System.out.println("=======================================");
        collection.stream().collect(Collectors.groupingBy(Function.identity())).forEach((a, list) -> System.out.println(a));
        System.out.println("=======================================");
        collection.stream().map(e -> new StringBuilder(e).reverse()).forEach(e -> System.out.println(e));
        System.out.println("=======================================");
        collection.forEach(n -> System.out.println(n + "  :" + n.length()));

    }
}